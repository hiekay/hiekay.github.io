<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hiekay&#39;s blog</title>
  
  <subtitle>分享技术的阳光地带</subtitle>
  <link href="https://hiekay.github.io/atom.xml" rel="self"/>
  
  <link href="https://hiekay.github.io/"/>
  <updated>2021-04-14T07:41:09.676Z</updated>
  <id>https://hiekay.github.io/</id>
  
  <author>
    <name>hiekay</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自己电脑挖狗狗币教程</title>
    <link href="https://hiekay.github.io/2021/04/14/%E8%87%AA%E5%B7%B1%E7%94%B5%E8%84%91%E6%8C%96%E7%8B%97%E7%8B%97%E5%B8%81%E6%95%99%E7%A8%8B/"/>
    <id>https://hiekay.github.io/2021/04/14/%E8%87%AA%E5%B7%B1%E7%94%B5%E8%84%91%E6%8C%96%E7%8B%97%E7%8B%97%E5%B8%81%E6%95%99%E7%A8%8B/</id>
    <published>2021-04-14T07:40:47.000Z</published>
    <updated>2021-04-14T07:41:09.676Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p><strong>注意事项：不需要翻墙</strong> 这里说的当然也可以挖别的币啊， 我个人看好狗狗币，所以废话不多少： 这个是下载链接：[<a href="https://unmineable.com/?ref=8kmv-wjnm">https://unmineable.com/?ref=8kmv-wjnm</a>) 邀请码：8kmv-wjnm 进去页面选择一个币种： <img src="https://upload-images.jianshu.io/upload_images/5110710-4863763a41ecffd9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p> 输入你的充币地址（可以去自己的交易所平台点充币，能拿到对应的地址）： <img src="https://upload-images.jianshu.io/upload_images/5110710-d541dc4bab8d278c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p> 把有50个就自动转入关掉，然后点开download下载： <img src="https://upload-images.jianshu.io/upload_images/5110710-9679dceba4aefcc9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p> 下载的话选择左边的： <img src="https://upload-images.jianshu.io/upload_images/5110710-7ae595ba859103dc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p> 下载完成后打开： <img src="https://upload-images.jianshu.io/upload_images/5110710-6c5a3f2006952f52.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>  <img src="https://upload-images.jianshu.io/upload_images/5110710-2b230eaec8895306.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p> 邀请码输入：8kmv-wjnm 然后电脑别关，就在那里烧你的CPU，选择CPU挖矿^_^ 成功之后界面如图： <img src="https://upload-images.jianshu.io/upload_images/5110710-e6e0f9611f090abf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>注意：</p>]]></content>
    
    
      
      
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;

&lt;p&gt;&lt;strong&gt;注意事项：不需要翻墙&lt;/strong&gt; 这里说的当然也可以挖别的币啊， 我个人看好狗狗币，所以废话不多少： 这个是下载链接：[&lt;a href=&quot;https://u</summary>
      
    
    
    
    <category term="数字货币" scheme="https://hiekay.github.io/categories/%E6%95%B0%E5%AD%97%E8%B4%A7%E5%B8%81/"/>
    
    
    <category term="数字货币" scheme="https://hiekay.github.io/tags/%E6%95%B0%E5%AD%97%E8%B4%A7%E5%B8%81/"/>
    
  </entry>
  
  <entry>
    <title>ChiaNetwork挖矿教程</title>
    <link href="https://hiekay.github.io/2021/04/13/ChiaNetwork%E6%8C%96%E7%9F%BF%E6%95%99%E7%A8%8B/"/>
    <id>https://hiekay.github.io/2021/04/13/ChiaNetwork%E6%8C%96%E7%9F%BF%E6%95%99%E7%A8%8B/</id>
    <published>2021-04-13T05:42:33.000Z</published>
    <updated>2021-04-13T05:43:03.188Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p>据 Chia Network 官方消息，Chia 区块链现已发布 1.0 版本，主网已在北京时间 3 月 19 日晚上 10 点正式上线。</p><p>这是一个成立于 2017 年的项目，由 BitTorrent 的编写者 Bram Cohen 所创建，旨在创建一个可编程的货币平台，不同于挖矿，Chia 采用的是「耕作（farming）」，是一种利用分布在全球节点上的现有空闲硬盘空间进行区块获取的方式。据了解，Chia Network 从 2017 年成立至今已获得大约 1600 万美元风险投资。</p><h3 id="昔日比特币杀手"><a href="#昔日比特币杀手" class="headerlink" title="昔日比特币杀手"></a>昔日<a href="https://link.jinse.com/s/4gxEl2?coin_keyword=1&coin=bitcoin" title="比特币">比特币</a>杀手</h3><p>与大多数项目相同，Chia 从诞生之日便顶着「比特币杀手」的名号，其空间与时间共识机制（Proof of Space + Proof of Time）曾一度被视为能替代比特币 PoW 的共识机制。因为前者不需要消耗大量的电力资源用于挖矿。</p><p>在 Chia 网络中，挖矿被换成了另一种说法「耕作」，矿工通过硬盘存储空间来验证其区块链。</p><p>2017 年，Chia 获得了 AngelList 联合创始人 Naval Ravikant 领投，A16Z、Greylock、丹华资本、MetaStable Capital、DCM Ventures 等机构 339.5 万美元种子轮融资。</p><p>2018 年，Chia 开启新一轮 500 万美元融资，本轮融资由 Slow Ventures 领投，Collab Crypto、IDEO、Naval Ravikant 跟投。Slow Ventures 执行董事 Jill Carlson 对此表示，风险投资行业对于 Layer 1 区块链项目已经失去了信心，但是 Slow Ventures 仍然期待 Chia 的主网。</p><p>主网的推出，意味着普通用户可以参与其挖矿。</p><h3 id="挖矿教程"><a href="#挖矿教程" class="headerlink" title="挖矿教程"></a>挖矿教程</h3><p>本次挖矿需准备一块大于 332 GB 的固态硬盘（SSD）和一块大于 101 GB 的机械硬盘（HDD）。SSD 用于存放缓存文件，HDD 用于存放最终 plot 文件。</p><p>为进行测试，律动 BlockBeats 准备了一块 500 GB 西数黑盘（SSD）以及一块 4T 希捷酷鱼（HDD）。</p><p>1、下载并安装软件，并创建钱包地址</p><p>软件下载地址：<a href="https://github.com/Chia-Network/chia-blockchain/releases/tag/1.0.0">https://github.com/Chia-Network/chia-blockchain/releases/tag/1.0.0</a></p><p>软件安装完毕之后，点击「CREATE A NEW PRIVATE KEY」创建钱包，并记录下 24 个助记词，该钱包地址也是挖矿地址。</p><p><img src="https://upload-images.jianshu.io/upload_images/5110710-c86820d2eac63fa2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片"></p><p>2、Plot 盘（P 盘）</p><p>依次点击「Plots」、「ADD A PLOT」。</p><p><img src="https://upload-images.jianshu.io/upload_images/5110710-0b3cf4d78d8b5089.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片"></p><p>由于最小缓存文件（约 332 GB）大于最终生成文件（约 101.4GB），因此对于 SSD 容量小于 HDD 容量的用户而言，建议进行多次 P 盘操作。</p><p><img src="https://upload-images.jianshu.io/upload_images/5110710-1745ebca4481fe5a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片"></p><p>实际测试，完成一次 P 盘需要大于 7 个小时。因此如果想进行较为专业的 Chia 挖矿，建议购买较大容量的 SSD 采用多 Plot 文件同时写入的方式用于存放缓存文件。</p><p><img src="https://upload-images.jianshu.io/upload_images/5110710-c17f822a0a633d50.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片"></p><p>3、点击「Farm」查看挖矿状态</p><p><img src="https://upload-images.jianshu.io/upload_images/5110710-1af27a20012de94a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片"></p><p>根据页面数据显示，只进行最低要求参与挖矿（即只使用 101 GB），需要 10 个月才能挖出一个区块。因此，普通用户可接入矿池进行挖矿。同时，律动 BlockBeats 也将在后续写满 4T 硬盘，并测试出块速度，后续测试结果将更新于本文。</p><h3 id="代币分配"><a href="#代币分配" class="headerlink" title="代币分配"></a>代币分配</h3><p>根据官网信息，目前 Chia 网络代币 XCH 分配还存在混乱，中文页面和英文页面显示存在出入。</p><p><img src="https://upload-images.jianshu.io/upload_images/5110710-6fae40946eeb247d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片"></p><p>以英文版为例，XCH 前 3 年每 10 分钟提供 64 枚奖励，3 年减半一次。12 年之后，即从主网启动第 13 年之后（第四次减半），Chia 网络奖励将维持在每 10 分钟 4 枚。</p><h3 id="挖矿体验不如人意"><a href="#挖矿体验不如人意" class="headerlink" title="挖矿体验不如人意"></a>挖矿体验不如人意</h3><p>经过长达两天的测试，Chia 挖矿的体验并不如人意。经过多次测试，P 盘过程并不能暂停，因此需要保证在这几个小时总保持系统的稳定运行。同时，由于缓存文件大于最终 plot 文件，对于普通用户而言，其手中 SSD 容量几乎都小于 HDD 容量，因此无法同时进行多文件 p 盘，导致浪费大量时间。</p><p>根据矿池提供的数据显示，目前 Chia 全网难度约为 132.78 PB，算力约为 132.66 PB，约等于 4.4 万块 4T 硬盘。普通用户参与 Chia 挖矿或可考虑接入矿池。</p><p><img src="https://upload-images.jianshu.io/upload_images/5110710-dcfb933f54b42902.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片"></p><p>矿池数据显示，目前每 PB 硬盘的日均产出为 57.68 XCH，如 4TB 硬盘按照 550 元计算，相当于 14 万元的硬盘每日产出40 XCH。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;

&lt;p&gt;据 Chia Network 官方消息，Chia 区块链现已发布 1.0 版本，主网已在北京时间 3 月 19 日晚上 10 点正式上线。&lt;/p&gt;
&lt;p&gt;这是一个成立于 2017</summary>
      
    
    
    
    <category term="数字货币" scheme="https://hiekay.github.io/categories/%E6%95%B0%E5%AD%97%E8%B4%A7%E5%B8%81/"/>
    
    
    <category term="数字货币" scheme="https://hiekay.github.io/tags/%E6%95%B0%E5%AD%97%E8%B4%A7%E5%B8%81/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建的个人博客配置评论系统：Valine</title>
    <link href="https://hiekay.github.io/2021/04/09/Hexo%E6%90%AD%E5%BB%BA%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%EF%BC%9AValine/"/>
    <id>https://hiekay.github.io/2021/04/09/Hexo%E6%90%AD%E5%BB%BA%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%EF%BC%9AValine/</id>
    <published>2021-04-09T02:38:20.000Z</published>
    <updated>2021-04-09T02:38:46.102Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h3 id="一、注册Leancloud"><a href="#一、注册Leancloud" class="headerlink" title="一、注册Leancloud"></a>一、注册Leancloud</h3><p>评论系统其实是放在Leancloud上的，因此首先需要去注册一个账号</p><p><a href="https://leancloud.cn/">Leancloud官网，点我注册</a></p><p>注册完以后需要创建一个应用，名字可以：blog ，然后 <strong>进入应用-&gt;设置-&gt;应用key</strong></p><p>获取你的appid 和 appkey 如图所示：<br><img src="https://upload-images.jianshu.io/upload_images/5110710-f78e74b42f5bc7e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h3 id="二、博客主题配置文件配置"><a href="#二、博客主题配置文件配置" class="headerlink" title="二、博客主题配置文件配置"></a>二、博客主题配置文件配置</h3><p>拿到你的appid和appkey之后，打开主题配置文件 搜索 valine，填入appid 和 appkey</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  appid:  your app id</span><br><span class="line">  appkey: your app key</span><br><span class="line">  notify: false # mail notifier , https:&#x2F;&#x2F;github.com&#x2F;xCss&#x2F;Valine&#x2F;wiki</span><br><span class="line">  verify: false # Verification code</span><br><span class="line">  placeholder: just so so</span><br><span class="line">  guest_info: nick,mail,link</span><br><span class="line">  pageSize: 10</span><br></pre></td></tr></table></figure><h3 id="三、配置域名"><a href="#三、配置域名" class="headerlink" title="三、配置域名"></a>三、配置域名</h3><p>记得在Leancloud -&gt; 设置 -&gt; 安全中心 -&gt; Web 安全域名 把你的域名加进去</p>]]></content>
    
    
      
      
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;



&lt;h3 id=&quot;一、注册Leancloud&quot;&gt;&lt;a href=&quot;#一、注册Leancloud&quot; class=&quot;headerlink&quot; title=&quot;一、注册Leancloud&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="hexo" scheme="https://hiekay.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://hiekay.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>个人博客hexo设置关于、标签、分类、归档、时间线</title>
    <link href="https://hiekay.github.io/2021/04/09/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo%E8%AE%BE%E7%BD%AE%E5%85%B3%E4%BA%8E%E3%80%81%E6%A0%87%E7%AD%BE%E3%80%81%E5%88%86%E7%B1%BB%E3%80%81%E5%BD%92%E6%A1%A3%E3%80%81%E6%97%B6%E9%97%B4%E7%BA%BF/"/>
    <id>https://hiekay.github.io/2021/04/09/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo%E8%AE%BE%E7%BD%AE%E5%85%B3%E4%BA%8E%E3%80%81%E6%A0%87%E7%AD%BE%E3%80%81%E5%88%86%E7%B1%BB%E3%80%81%E5%BD%92%E6%A1%A3%E3%80%81%E6%97%B6%E9%97%B4%E7%BA%BF/</id>
    <published>2021-04-09T02:24:53.000Z</published>
    <updated>2021-04-09T02:27:45.591Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h3 id="1、添加-关于页面"><a href="#1、添加-关于页面" class="headerlink" title="1、添加 关于页面"></a>1、添加 关于页面</h3><p>使用：hexo new page “about” 新建一个 关于我 页面。<br>主题的 _config.yml 文件中的 menu 中进行匹配<br>不同主题 _config. yml文件有区别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;      &#x2F;&#x2F;主页</span><br><span class="line">  categories: &#x2F;categories &#x2F;&#x2F;分类</span><br><span class="line">  archives: &#x2F;archives   &#x2F;&#x2F;归档</span><br><span class="line">  tags: &#x2F;tags   &#x2F;&#x2F;标签</span><br><span class="line">  about: &#x2F;about   &#x2F;&#x2F;关于                  （添加此行即可）</span><br><span class="line">或    </span><br><span class="line">menu:</span><br><span class="line">  - page: home</span><br><span class="line">    directory: .      &#x2F;&#x2F;主页</span><br><span class="line">    icon: fa-home</span><br><span class="line">  - page: archive</span><br><span class="line">    directory: archives&#x2F;    &#x2F;&#x2F;归档</span><br><span class="line">    icon: fa-archive</span><br><span class="line">  - page: about</span><br><span class="line">    directory: about&#x2F;    &#x2F;&#x2F;关于</span><br><span class="line">    icon: fa-user</span><br><span class="line">  - page: rss</span><br><span class="line">    directory: atom.xml    &#x2F;&#x2F;rss订阅</span><br><span class="line">    icon: fa-rss</span><br></pre></td></tr></table></figure><p>编辑 about 关于页面 md文件 部署就能看到</p><h3 id="2、添加-标签页面"><a href="#2、添加-标签页面" class="headerlink" title="2、添加 标签页面"></a>2、添加 标签页面</h3><p>使用： <code>hexo new page tags</code> 新建一个 标签 页面。<br>主题的 <code>_config.yml</code> 文件中的 <code>menu</code> 中进行匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;      &#x2F;&#x2F;主页</span><br><span class="line">  categories: &#x2F;categories &#x2F;&#x2F;分类</span><br><span class="line">  archives: &#x2F;archives   &#x2F;&#x2F;归档</span><br><span class="line">  tags: &#x2F;tags   &#x2F;&#x2F;标签                  （添加此行即可）</span><br><span class="line">  about: &#x2F;about   &#x2F;&#x2F;关于</span><br></pre></td></tr></table></figure><p>底下代码是一篇包含 <code>标签</code> 文章的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 标签测试</span><br><span class="line">tags:</span><br><span class="line">  - Testing                   （这个就是文章的标签了）</span><br><span class="line">  - Another Tag               （这个就是文章的标签了）</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="3、添加-分类页面"><a href="#3、添加-分类页面" class="headerlink" title="3、添加 分类页面"></a>3、添加 分类页面</h3><p>使用： <code>hexo new page categories</code> 新建一个 分类 页面。<br>主题的 <code>_config.yml</code> 文件中的 <code>menu</code> 中进行匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;      &#x2F;&#x2F;主页</span><br><span class="line">  categories: &#x2F;categories &#x2F;&#x2F;分类        （添加此行即可）</span><br><span class="line">  archives: &#x2F;archives   &#x2F;&#x2F;归档</span><br><span class="line">  tags: &#x2F;tags   &#x2F;&#x2F;标签                  </span><br><span class="line">  about: &#x2F;about   &#x2F;&#x2F;关于</span><br></pre></td></tr></table></figure><p>底下代码是一篇包含 <code>分类</code> 文章的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 分类测试</span><br><span class="line">categories:</span><br><span class="line">- hexo                       （这个就是文章的分类了）</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="4、添加-归档页面"><a href="#4、添加-归档页面" class="headerlink" title="4、添加 归档页面"></a>4、添加 归档页面</h3><p>使用： <code>hexo new page archives   </code> 新建一个 归档 页面。 </p><p>主题的 <code>_config.yml</code> 文件中的 <code>menu</code> 中进行匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;      &#x2F;&#x2F;主页</span><br><span class="line">  categories: &#x2F;categories &#x2F;&#x2F;分类        </span><br><span class="line">  archives: &#x2F;archives   &#x2F;&#x2F;归档             （添加此行即可）</span><br><span class="line">  tags: &#x2F;tags   &#x2F;&#x2F;标签                  </span><br><span class="line">  about: &#x2F;about   &#x2F;&#x2F;关于</span><br></pre></td></tr></table></figure><h3 id="5、添加-时间线页面"><a href="#5、添加-时间线页面" class="headerlink" title="5、添加 时间线页面"></a>5、添加 时间线页面</h3><p>使用： <code>hexo new page timeline   </code> 新建一个 归档 页面。 </p><p>主题的 <code>_config.yml</code> 文件中的 <code>menu</code> 中进行匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;      &#x2F;&#x2F;主页</span><br><span class="line">  categories: &#x2F;categories &#x2F;&#x2F;分类        </span><br><span class="line">  archives: &#x2F;archives   &#x2F;&#x2F;归档             （添加此行即可）</span><br><span class="line">  tags: &#x2F;tags   &#x2F;&#x2F;标签    </span><br><span class="line">-page: history   (时间线)</span><br><span class="line">     directory: timeline&#x2F;</span><br><span class="line">      icon: fa-history              </span><br><span class="line">  about: &#x2F;about   &#x2F;&#x2F;关于</span><br></pre></td></tr></table></figure><ul><li>修改timeline对应的列表<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">timeline:</span><br><span class="line">  - num: 1</span><br><span class="line">    word: 2018&#x2F;08&#x2F;16-Start </span><br><span class="line">  - num: 2</span><br><span class="line">    word: writing</span><br><span class="line">  - num: 3</span><br><span class="line">    word: More</span><br></pre></td></tr></table></figure></li></ul><h3 id="6、添加-自定义页面"><a href="#6、添加-自定义页面" class="headerlink" title="6、添加 自定义页面"></a>6、添加 自定义页面</h3><p>使用： <code>hexo new page &quot;guestbook&quot;</code> 新建一个 自定义 页面。<br>主题的 <code>_config.yml</code> 文件中的 <code>menu</code> 中进行匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;      &#x2F;&#x2F;主页</span><br><span class="line">  categories: &#x2F;categories &#x2F;&#x2F;分类        </span><br><span class="line">  archives: &#x2F;archives   &#x2F;&#x2F;归档   </span><br><span class="line">  tags: &#x2F;tags   &#x2F;&#x2F;标签                  </span><br><span class="line">  about: &#x2F;about   &#x2F;&#x2F;关于</span><br><span class="line">  guestbook: &#x2F;guestbook    &#x2F;&#x2F;自定义             （添加此行即可）</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;

&lt;h3 id=&quot;1、添加-关于页面&quot;&gt;&lt;a href=&quot;#1、添加-关于页面&quot; class=&quot;headerlink&quot; title=&quot;1、添加 关于页面&quot;&gt;&lt;/a&gt;1、添加 关于页面&lt;/</summary>
      
    
    
    
    
    <category term="hexo" scheme="https://hiekay.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人博客</title>
    <link href="https://hiekay.github.io/2021/04/01/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://hiekay.github.io/2021/04/01/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-04-01T10:07:20.000Z</published>
    <updated>2021-04-01T13:42:51.903Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li><p>1、安装git (自己搞定)</p></li><li><p>2、配置 git </p></li></ul><p>生成秘钥：</p><blockquote><p>git config –global user.email “<a href="mailto:&#x78;&#120;&#120;&#x40;&#113;&#113;&#46;&#99;&#x6f;&#x6d;">&#x78;&#120;&#120;&#x40;&#113;&#113;&#46;&#99;&#x6f;&#x6d;</a>“ # 填写你github注册并且验证的邮箱</p></blockquote><blockquote><p>git config –global user.name “xxxx” # github 用户名</p></blockquote><blockquote><p>ssh-keygen # 会出现下面的内容，一直按Enter键就行</p></blockquote><p>Generating public/private rsa key pair.</p><p>Enter file in which to save the key (/home/logan/.ssh/id_rsa):</p><p>/home/username/.ssh/id_rsa already exists.</p><p>Overwrite (y/n)?  #因为我已经生成过了所以提示，一直回车即可 </p><p>打开用户目录下的 .ssh 目录下面生成 id_rsa(私钥) id_rsa.pub(公钥)两个文件，</p><p>打开id_rsa.pub，复制里面的内容,到github</p><p><img src="http://upload-images.jianshu.io/upload_images/5110710-5d4d4e66f279cf5b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p><img src="http://upload-images.jianshu.io/upload_images/5110710-7575e1b0682f07da?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p><img src="http://upload-images.jianshu.io/upload_images/5110710-c75431005bba4338?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>添加完之后</p><ul><li>3、测试</li></ul><blockquote><p>ssh -T <a href="mailto:&#103;&#x69;&#116;&#64;&#103;&#105;&#116;&#104;&#x75;&#98;&#46;&#99;&#x6f;&#x6d;">&#103;&#x69;&#116;&#64;&#103;&#105;&#116;&#104;&#x75;&#98;&#46;&#99;&#x6f;&#x6d;</a></p></blockquote><h1 id="输出-You’ve-successfully-authenticated-表示添加key-成功"><a href="#输出-You’ve-successfully-authenticated-表示添加key-成功" class="headerlink" title="输出 You’ve successfully authenticated 表示添加key 成功."></a>输出 You’ve successfully authenticated 表示添加key 成功.</h1><h1 id="一、注册-github账号"><a href="#一、注册-github账号" class="headerlink" title="一、注册 github账号"></a>一、注册 github账号</h1><p><a href="https://github.com/">https://github.com</a> </p><h1 id="二、建仓库"><a href="#二、建仓库" class="headerlink" title="二、建仓库"></a>二、建仓库</h1><ul><li>1、新建仓库</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/5110710-a28d558c8d35128a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><ul><li>2、填写仓库名,创建仓库，用于放网站</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/5110710-a4a796b6928bf737?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><ul><li>3、开启github pages</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/5110710-60243eb891f4451f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>开启 github pages </p><p><img src="http://upload-images.jianshu.io/upload_images/5110710-247dd51d0d4a5896?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><ul><li>4、再建一个仓库用于放文章、配置。 这个仓库名字随意，比如：blogSource</li></ul><h1 id="三、创建本地仓库"><a href="#三、创建本地仓库" class="headerlink" title="三、创建本地仓库"></a>三、创建本地仓库</h1><p>准备工作</p><ul><li>1、找一个目录来作为你本地的仓库,比如我的是”D:\gitblog”,那么就在gitblog文件夹下初始化仓库，将第二步中创建的放网站的仓库clone到该文件夹中。</li></ul><blockquote><p>git clone xxx.git</p></blockquote><h1 id="四、安装hexo"><a href="#四、安装hexo" class="headerlink" title="四、安装hexo"></a>四、安装hexo</h1><ul><li>准备工作：node官网 <a href="https://nodejs.org/en/">https://nodejs.org/en/</a> 下载安装最新版的node.js ，自行安装。</li></ul><blockquote><p>node -v   //查看版本</p></blockquote><ul><li>1、安装 ，打开git 或cmd </li></ul><blockquote><p>npm config set registry <a href="http://registry.cnpmjs.org/">http://registry.cnpmjs.org/</a> # node 的源有很多，切换方式也很多，可以自行选择</p></blockquote><blockquote><p>npm install hexo -g #全局安装hexo,可能需要3分钟 出现warn警告信息不用管。</p></blockquote><blockquote><p>npm update hexo -g # 更新</p></blockquote><p>因为Hexo 3.0 把服务器独立成了个别模块，您必须先安装才能使用。</p><blockquote><p>npm install hexo-server –save #安装服务</p></blockquote><blockquote><p>npm install hexo-deployer-git –save</p></blockquote><ul><li>2、初始化 hexo , 我是在文件夹”D:\gitblog\hexo”下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt; mkdir hexo #创建一个文件夹，初始化hexocd hexo</span><br><span class="line"></span><br><span class="line">&gt; hexo init # 初始化 hexo 文件夹 成功就会提示</span><br><span class="line"></span><br><span class="line">当你看到Start blogging with Hexo! 恭喜！框架就已经搭建好了</span><br><span class="line"></span><br><span class="line">执行以下命令就可以在本地起服务,进入hexo 目录下</span><br><span class="line"></span><br><span class="line">&gt; hexo server</span><br><span class="line"></span><br><span class="line">然后访问[http:&#x2F;&#x2F;localhost:4000&#x2F;](http:&#x2F;&#x2F;localhost:4000&#x2F;)，就能看到自己博客的雏形了</span><br><span class="line"></span><br><span class="line">![image](http:&#x2F;&#x2F;upload-images.jianshu.io&#x2F;upload_images&#x2F;5110710-112987a2d27d3620?imageMogr2&#x2F;auto-orient&#x2F;strip%7CimageView2&#x2F;2&#x2F;w&#x2F;1240)</span><br><span class="line"></span><br><span class="line">hexo文件夹的作用</span><br><span class="line"></span><br><span class="line">hexo&#x2F;_config.yml #这个是hexo 配置文件</span><br><span class="line"></span><br><span class="line">hexo&#x2F;.deploy_git&#x2F; # 这个目录下面存放的是hexo 自带的git 配置</span><br><span class="line"></span><br><span class="line">hexo&#x2F;node_modules&#x2F; # hexo 需要的node js 模块</span><br><span class="line"></span><br><span class="line">hexo&#x2F;.npmignore # 文件里面存放的是npm需要忽略的文件</span><br><span class="line"></span><br><span class="line">hexo&#x2F;package.json # node.js 的配置文件</span><br><span class="line"></span><br><span class="line">hexo&#x2F;public&#x2F; # 存放要生成的静态网页</span><br><span class="line"></span><br><span class="line">hexo&#x2F;scaffolds&#x2F; # 生成文档的格式，用于 hexo new 命令 默认是post格式</span><br><span class="line"></span><br><span class="line">hexo&#x2F;source&#x2F; # 存放hexo new 生成的源文件，我们写的博客就是在这里</span><br><span class="line"></span><br><span class="line">hexo&#x2F;themes&#x2F; # hexo 的主题 都在这里面</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>3、hexo相关命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1\. hexo new [layout] &quot;file_name&quot; # 新建 file_name 文章</span><br><span class="line"></span><br><span class="line"># hexo new 文章名字 会创建个file_name.md 的文档</span><br><span class="line"></span><br><span class="line"># 里面有一些默认的格式，文档的路径 hexo&#x2F;source&#x2F;_posts&#x2F;</span><br><span class="line"></span><br><span class="line"># layout 默认的是post 即scaffolds里面的的post文件</span><br><span class="line"></span><br><span class="line"># 不写就是默认的，layout 可以自己配置</span><br><span class="line"></span><br><span class="line">2\. hexo generate   # 生成静态文档，将文章生成为博客的一部分，可简写为 hexo g</span><br><span class="line"></span><br><span class="line">3\. hexo clean  # 清理缓存文件 数据等（非必须），一般上传前线clean再generate</span><br><span class="line"></span><br><span class="line">4\. hexo server &#x2F;&#x2F;本地预览（非必须）， 可简写为 hexo s</span><br><span class="line"></span><br><span class="line">5\. hexo deploy &#x2F;&#x2F;推送到GitHub,可简写为 hexo d</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>4、hexo配置,配置文件  hexo/_config.yml  根据注释配置自己的</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># Hexo Configuration</span><br><span class="line"></span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;configuration.html</span><br><span class="line"></span><br><span class="line">## Source: https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo&#x2F;</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line"></span><br><span class="line">title: hiekay&#39;s blog #网站标题</span><br><span class="line"></span><br><span class="line">subtitle: 分享技术的阳光地带 # 副标题</span><br><span class="line"></span><br><span class="line">description: Recoding my grow of technology. # 介绍</span><br><span class="line"></span><br><span class="line">author: hiekay # 作者</span><br><span class="line"></span><br><span class="line">language: zh-CN # 语言</span><br><span class="line"></span><br><span class="line">timezone: # 时区</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line"></span><br><span class="line">## If your site is put in a subdirectory, set url as &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39; and root as &#39;&#x2F;child&#x2F;&#39;</span><br><span class="line"></span><br><span class="line">url: [https:&#x2F;&#x2F;hiekay.github.io&#x2F;](https:&#x2F;&#x2F;hiekay.github.io&#x2F;) # 填写github pages 生成的那个网址就ok</span><br><span class="line"></span><br><span class="line">root: &#x2F;</span><br><span class="line"></span><br><span class="line">permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br><span class="line"></span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Directory 目录对应的文件</span><br><span class="line"></span><br><span class="line">source_dir: source</span><br><span class="line"></span><br><span class="line">public_dir: public</span><br><span class="line"></span><br><span class="line">tag_dir: tags</span><br><span class="line"></span><br><span class="line">archive_dir: archives</span><br><span class="line"></span><br><span class="line">category_dir: categories</span><br><span class="line"></span><br><span class="line">code_dir: downloads&#x2F;code</span><br><span class="line"></span><br><span class="line">i18n_dir: :lang</span><br><span class="line"></span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"># Writing 这里也是 写文章相关的默认配置</span><br><span class="line"></span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line"></span><br><span class="line">default_layout: post #默认layout方式</span><br><span class="line"></span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line"></span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line"></span><br><span class="line">filename_case: 0 #将文件名转换为小写或大写，1.小写，2.大写，0.不转换 </span><br><span class="line"></span><br><span class="line">render_drafts: false # 渲染草稿</span><br><span class="line"></span><br><span class="line">post_asset_folder: false # 开启Assert 文件夹</span><br><span class="line"></span><br><span class="line">relative_link: false # 相对路径</span><br><span class="line"></span><br><span class="line">future: true</span><br><span class="line"></span><br><span class="line">highlight: # 代码高亮</span><br><span class="line"></span><br><span class="line">  enable: true #是否启动</span><br><span class="line"></span><br><span class="line">    line_number: true # 行号</span><br><span class="line"></span><br><span class="line">      auto_detect: false # 自动检测语言类型</span><br><span class="line"></span><br><span class="line">        tab_replace: # tab 键代替几个空格</span><br><span class="line"></span><br><span class="line">        # Category &amp; Tag  标签和分类</span><br><span class="line"></span><br><span class="line">        default_category: uncategorized</span><br><span class="line"></span><br><span class="line">        category_map:</span><br><span class="line"></span><br><span class="line">        tag_map:</span><br><span class="line"></span><br><span class="line">        # Date &#x2F; Time format</span><br><span class="line"></span><br><span class="line">        ## Hexo uses Moment.js to parse and display date</span><br><span class="line"></span><br><span class="line">        ## You can customize the date format as defined in</span><br><span class="line"></span><br><span class="line">        ## http:&#x2F;&#x2F;momentjs.com&#x2F;docs&#x2F;#&#x2F;displaying&#x2F;format&#x2F;</span><br><span class="line"></span><br><span class="line">        date_format: YYYY-MM-DD</span><br><span class="line"></span><br><span class="line">        time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line">        # Pagination</span><br><span class="line"></span><br><span class="line">        ## Set per_page to 0 to disable pagination</span><br><span class="line"></span><br><span class="line">        per_page: 10</span><br><span class="line"></span><br><span class="line">        pagination_dir: page</span><br><span class="line"></span><br><span class="line">        # Extensions</span><br><span class="line"></span><br><span class="line">        ## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line"></span><br><span class="line">        ## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line"></span><br><span class="line">        theme: maupassant  # 这里配置主题直接写主题的名字就行</span><br><span class="line"></span><br><span class="line">        # Deployment  我们需要注意就就是这里</span><br><span class="line"></span><br><span class="line">        ## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line"></span><br><span class="line">        deploy:</span><br><span class="line"></span><br><span class="line">        - type: git</span><br><span class="line"></span><br><span class="line">          repo: git@github.com:hiekay&#x2F;hiekay.github.io.git</span><br><span class="line"></span><br><span class="line">        # repo 很多人说不会填写，其实很简单，到你的开启github pages的仓库</span><br><span class="line"></span><br><span class="line">        # 页面，里面有一个 git clone 的git 地址，复制就可以了不会出错</span><br><span class="line"></span><br><span class="line">        # 最后注意是 git 类型的，不要复制 https 开头的</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>注意开始的url 和 最后的 deploy 选项，最后配置完成测试一下.</strong></p><p><strong>- 5、hexo 主题设置</strong></p><p>**参考： <a href="https://www.haomwei.com/technology/maupassant-hexo.html">https://www.haomwei.com/technology/maupassant-hexo.html</a> **</p><p>打开链接：<a href="https://github.com/tufu9441/maupassant-hexo">https://github.com/tufu9441/maupassant-hexo</a></p><p>1、点击右上角的Fork 按钮，然后你的github 仓库就会出现这个主题了</p><p>git clone 你自己的仓库的主题.git  hexo/themes/maupassant   (一定要是maupassant 文件夹，如果不是自己重命名)</p><blockquote><p>cd D:\gitblog\hexo\themes</p></blockquote><blockquote><p>git clone xxx.git </p></blockquote><p>** 路径要对，可以根据自己的情况，不过一定的是 themes 目录下的** </p><p>** maupassant 文件夹，这个文件夹肯定不存在，git 会自己创建的** </p><p>以后你对主题做的修改就不会丢失而且载搭建博客就会方便很多 ,修改完，记得 git push 就行.</p><p>2、保存</p><blockquote><p>cd D:\gitblog\hexo </p></blockquote><blockquote><p>npm install hexo-renderer-jade –save</p></blockquote><blockquote><p>npm install hexo-renderer-sass –save</p></blockquote><p>3、编辑Hexo目录下的 _config.yml，将theme的值改为maupassant</p><p>4、自己再启动看一下网站主题</p><p><img src="http://upload-images.jianshu.io/upload_images/5110710-dba2c896cd5f54fd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><h1 id="5、部署到网上"><a href="#5、部署到网上" class="headerlink" title="5、部署到网上"></a>5、部署到网上</h1><p>保证上面都配置对了。</p><blockquote><p>hexo clean</p></blockquote><blockquote><p>hexo g   //hexo generate</p></blockquote><blockquote><p>hexo d  // hexo deploy</p></blockquote><p>现在就是见证奇迹的一刻，打开你的Git网址</p><p><img src="http://upload-images.jianshu.io/upload_images/5110710-d92f82743fcd5dcc?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>成功了！最后执行:**(**hexo clean –&gt;hexo generate –&gt;hexo deploy)</p><p>你就可以看到你的博客了</p><p>记住，每次修改配置信息或者其他必须要执行上面的步骤，才可以使得配置信息生效。</p><ul><li>1、新建新建一篇博客，在cmd执行命令：hexo new post “博客名”</li></ul><blockquote><p>hexo n “hai”</p></blockquote><p>可以看到新建的文章</p><p><img src="http://upload-images.jianshu.io/upload_images/5110710-33c71a8c5ecf5177?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>使用编辑器编好文章，那么就可以使用命令：hexo d -g，生成以及部署，该文章了。</p><p><img src="http://upload-images.jianshu.io/upload_images/5110710-609257515d45afe6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>到这也就完成了博客搭建，下面介绍的是进阶篇。</p><h1 id="六、换成自己的域名"><a href="#六、换成自己的域名" class="headerlink" title="六、换成自己的域名"></a>六、换成自己的域名</h1><ul><li>1、首先你需要自己购买好了一个域名。我是在阿里云上买的域名。然后在域名管理控制台，将域名解析与博客地址映射。</li></ul><p>首先在本地 cmd 中 ping hiekay.github.io  得到ip。</p><p><img src="http://upload-images.jianshu.io/upload_images/5110710-d5d1f3110f7b8fb3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>然后在域名解析中配置好</p><p><img src="http://upload-images.jianshu.io/upload_images/5110710-1e97f01726afb2cf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><ul><li>2、Hexo目录下的source中建一个CNAME命名的文件夹(切记没有后缀)</li></ul><p>内容写你的域名： <a href="http://www.hiekay.com/">www.hiekay.com</a></p><ul><li>3、在github中配置域名,在setting 中配置自己的域名。</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/5110710-573edfe62cbeed01?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>最后执行:**(**hexo clean –&gt;hexo generate –&gt;hexo deploy)</p><p><img src="http://upload-images.jianshu.io/upload_images/5110710-346fffacfeb49ba7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><h1 id="七、配置script，用本地Markdown-编辑器。"><a href="#七、配置script，用本地Markdown-编辑器。" class="headerlink" title="七、配置script，用本地Markdown 编辑器。"></a>七、配置script，用本地Markdown 编辑器。</h1><p>在Hexo中新建一篇博文非常简单，只需要在命令行中键入以下命令然后回车即可：</p><blockquote><p>hexo new  “The title of your blog”</p></blockquote><p>此后Hexo便会在Hexo的根目录的source文件夹下的_posts目录下自动帮你创建相应的md文件。然后我们打开该目录，找到刚刚Hexo自动生成的文件打开编辑即可。</p><p>但是当我们的博文比较多，这样我们就需要在成堆的Markdown文件中找到刚才自动生成的文件，这样做显然是一件比较痛苦的事情。</p><p>hexo 提供相应的js 脚本，可以在hexo new 之后，使用你想用的应用打开 新建的文章。</p><p>首先在Hexo目录下的scripts目录中创建一个JavaScript脚本文件。</p><p>如果没有这个scripts目录，则新建一个。</p><p>scripts目录新建的JavaScript脚本文件可以任意取名，例如：new_open.js</p><p>通过这个脚本，我们用其来监听hexo new这个动作，并在检测到hexo new之后，执行编辑器打开的命令。</p><ul><li>1、windows ,如果你是windows平台的Hexo用户，则将下列内容写入你的脚本：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">var spawn &#x3D; require(&#39;child_process&#39;).exec;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Hexo 2.x 用户复制这段</span><br><span class="line"></span><br><span class="line">hexo.on(&#39;new&#39;,function(path)&#123;</span><br><span class="line"></span><br><span class="line">spawn(&#39;start  &quot;markdown编辑器绝对路径.exe&quot; &#39;+ path);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Hexo 3 用户复制这段</span><br><span class="line"></span><br><span class="line">hexo.on(&#39;new&#39;,function(data)&#123;</span><br><span class="line"></span><br><span class="line">spawn(&#39;start  &quot;markdown编辑器绝对路径.exe&quot; &#39;+ data.path);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>eg:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">var spawn &#x3D; require(&#39;child_process&#39;).exec;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Hexo 3 用户复制这段</span><br><span class="line"></span><br><span class="line">hexo.on(&#39;new&#39;,function(data)&#123;</span><br><span class="line"></span><br><span class="line">spawn(&#39;start  &quot;D:&#x2F;&#x2F;Program Files&#x2F;&#x2F;Story&#x2F;&#x2F;nw.exe&quot; &#39;+ data.path);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>2、mac ,如果你是Mac平台Hexo用户，则将下列内容写入你的脚本：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">var exec &#x3D;require(&#39;child_process&#39;).exec;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Hexo 2.x 用户复制这段</span><br><span class="line"></span><br><span class="line">hexo.on(&#39;new&#39;,function(path)&#123;</span><br><span class="line"></span><br><span class="line">exec(&#39;open -a &quot;markdown编辑器绝对路径.app&quot; &#39;+ path);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Hexo 3 用户复制这段</span><br><span class="line"></span><br><span class="line">hexo.on(&#39;new&#39;,function(data)&#123;</span><br><span class="line"></span><br><span class="line">exec(&#39;open -a &quot;markdown编辑器绝对路径.app&quot; &#39;+ data.path);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>3、linux </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 如果使用vi的这样写 </span><br><span class="line"></span><br><span class="line"># hexo 3.x 路径是[data.path] hexo</span><br><span class="line"></span><br><span class="line"> 2.x 路径是 [path]</span><br><span class="line"></span><br><span class="line">var editor &#x3D; process.env.EDITOR || &#39;vi&#39;;</span><br><span class="line"></span><br><span class="line">var child &#x3D; require(&#39;child_process&#39;).spawn;</span><br><span class="line"></span><br><span class="line">hexo.on(&#39;new&#39;, function(data)&#123;</span><br><span class="line"></span><br><span class="line">child(editor, [data.path], &#123;</span><br><span class="line"></span><br><span class="line">      stdio: &#39;inherit&#39;&#125;);</span><br><span class="line"></span><br><span class="line">        &#125;);# 使用sublime var child &#x3D; require(&#39;child_process&#39;).spawn;</span><br><span class="line"></span><br><span class="line">hexo.on(&#39;new&#39;, function(data)&#123;</span><br><span class="line"></span><br><span class="line">child(subl, [data.pat);</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>保存并退出脚本之后，在命令行中键入：</p><blockquote><p> hexo new” auto open editor test”</p></blockquote><p>是不是就顺利的自动打开了自动生成的md文件啦~</p><h1 id="八、配置图床，博文中的图片"><a href="#八、配置图床，博文中的图片" class="headerlink" title="八、配置图床，博文中的图片"></a>八、配置图床，博文中的图片</h1><p>博主推荐七牛云 ，<a href="https://portal.qiniu.com/signin">首页-七牛云</a>   ，自行注册。</p><p>选择对象存储，内容管理,添加资源，然后你可以设置图片的格式，大小水印，这个按照步骤一个没有问题 。</p><p>图片的添加，通过–&gt;更多操作–&gt;内容管理 –&gt;上传文件 </p><p>图片外链就在图片操作选项里，直接复制到blog，片样式需要在图片外链后加上 “?图片样式”。</p><p>-1、qshell 命令行工具 ,</p><p>链接：[首页-七牛云qshell ](<a href="https://developer.qiniu.com/kodo/tools/1302/qshell%EF%BC%89">https://developer.qiniu.com/kodo/tools/1302/qshell）</a></p><p>[首页-七牛云qshell ](<a href="https://github.com/qiniu/qshell%EF%BC%89">https://github.com/qiniu/qshell）</a></p><p><img src="http://upload-images.jianshu.io/upload_images/5110710-754b7db9cdaeb172?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>下载 qshell 工具之后，配置环境变量。</p><p><a href="https://developer.qiniu.com/kodo/kb/1685/using-qshell-synchronize-directories">https://developer.qiniu.com/kodo/kb/1685/using-qshell-synchronize-directories</a></p><p>配置账户</p><blockquote><p>qshell account AK SK </p></blockquote><blockquote><p>qshell account  // 验证</p></blockquote><p>在当前用户主目录中生成 qshell 目录：account.json  //C:\Users\hiekay.qshell</p><p>使用qupload 命令同步本地图片到七牛云。</p><ul><li>2、qshell 使用，配置文档，</li></ul><p><a href="https://github.com/qiniu/qshell/blob/master/docs/qupload.md">文档</a></p><p>配置config </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 这是我的 config 配置文件 upload.conf</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    &quot;src_dir&quot;      :  &quot;D:\\gitblog\\qshell\\source&quot;,    &#x2F;&#x2F;本地同步路径，为全路径格式</span><br><span class="line"></span><br><span class="line">    &quot;bucket&quot;        :  &quot;blog&quot;,    &#x2F;&#x2F;同步数据的目标空间名称</span><br><span class="line"></span><br><span class="line"> &quot;key_prefix&quot;    :  &quot;blog&quot;, &#x2F;&#x2F;在保存文件在七牛空间时，使用的文件名的前缀，默认为空字符串</span><br><span class="line"></span><br><span class="line">     &quot;ignore_dir&quot; : true,  &#x2F;&#x2F;保存文件在七牛空间时，使用的文件名是否忽略本地路径，默认为false</span><br><span class="line"></span><br><span class="line">    &quot;check_exists&quot;  :  true, &#x2F;&#x2F;每个文件上传之前是否检查空间中是否存在同名文件</span><br><span class="line"></span><br><span class="line">    &quot;overwrite&quot;    :  true, &#x2F;&#x2F;是否覆盖空间中已有的同名文件，默认不覆盖。</span><br><span class="line"></span><br><span class="line">    &quot;rescan_local&quot;  :  true  &#x2F;&#x2F;默认情况下，本地新增的文件不会被同步，需要手动设置为true才会去检测新增文件。</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>3、上传</li></ul><blockquote><p>qshell qupload [并发数] [本地上传配置文件]</p></blockquote><p>进入   .qshell 目录下</p><blockquote><p>qshell qupload 3 upload.conf</p></blockquote><p>进入七牛云查看</p><p><img src="http://upload-images.jianshu.io/upload_images/5110710-f127a6681acd1c4c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><h1 id="九、配置git-source-保存文章。"><a href="#九、配置git-source-保存文章。" class="headerlink" title="九、配置git source 保存文章。"></a>九、配置git source 保存文章。</h1><p>这里就是使用git 管理博客的文章了 </p><ul><li>1、建立git仓库 </li></ul><blockquote><p>cd hexo </p></blockquote><blockquote><p>git init </p></blockquote><p>-2、 编辑gitignore，忽略不想上传的文件 ,</p><p>在.gitignore 文件中添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">.DS_Store</span><br><span class="line"></span><br><span class="line">Thumbs.dbdb.json*.lognode_modules</span><br><span class="line"></span><br><span class="line">public.deploy*</span><br><span class="line"></span><br><span class="line">debug.logindex.html.npmig*</span><br><span class="line"></span><br><span class="line">themes</span><br><span class="line"></span><br><span class="line">package.json</span><br><span class="line"></span><br><span class="line">*~</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>3、添加远程仓库 *</li></ul><p>git remote add origin 此处填写我们第一步建立的第二个仓库的git clone 的那个git地址</p><blockquote><p>git remote add origin  xxx.git </p></blockquote><ul><li>4、 添加文件夹,不会添加已经写在 .gitignore文件里面的文件  </li></ul><blockquote><p>git add .</p></blockquote><ul><li>5、 提交到远程仓库</li></ul><blockquote><p>git commit-a-m”commit first”</p></blockquote><blockquote><p>git push origin master</p></blockquote><h1 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h1><p>在设置图标的时候一直没办法替换点原来的 后来发现 改名后的ico要放在所用主题的 source 下才行 而不是 根目录下的source（值得一提，解析24小时候 域名自带的logo才会消失</p>]]></content>
    
    
      
      
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;

&lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1、安装g</summary>
      
    
    
    
    <category term="hexo" scheme="https://hiekay.github.io/categories/hexo/"/>
    
    
    <category term="hexo,github,博客" scheme="https://hiekay.github.io/tags/hexo-github-%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hiekay.github.io/2021/03/31/hello-world/"/>
    <id>https://hiekay.github.io/2021/03/31/hello-world/</id>
    <published>2021-03-31T14:03:25.894Z</published>
    <updated>2021-03-31T14:03:25.894Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
